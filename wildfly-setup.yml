---
- name: "A Wildfly Playbook"
  hosts: "{{ wildfly_ansible_hosts | default('localhost') }}"
  vars:
    wfly_version: 16.0.0.Final
    workdir: /opt/wildfly/
    wfly_zipfile: "wildfly-{{ wfly_version }}.zip"
    wfly_download_url: https://download.jboss.org/wildfly/{{ wfly_version }}/{{ wfly_zipfile }}
    wildfly:
      home: "{{ workdir }}/wildfly-{{ wfly_version }}/"
      user: wildfly
      min_mem: 64m
      max_mem: 512m
      metaspace_size: 96m
      metaspace_maxsize: 256m
    pgsql_module_dir: "{{ wildfly.home }}//modules/org/postgresql/main"
    jdbc_driver_filename: postgresql-9.2-1002-jdbc4.jar
    jdbc_driver_url: https://repo.maven.apache.org/maven2/org/postgresql/postgresql/9.2-1002-jdbc4/{{ jdbc_driver_filename }}
    jdbc_driver_path: "{{ pgsql_module_dir }}/{{ jdbc_driver_filename }}"

  tasks:
    # mostly needed if running on a docker container
    - name: "Ensures required packages are installed"
      yum:
        name:
          - zip
          - unzip
          - procps-ng
          - initscripts
          - "{{ jvm_package | default('java-1.8.0-openjdk-devel') }}"
        state: present

    - name: "Ensures workdir '{{ workdir }}' is created"
      file:
        path: "{{ workdir }}"
        state: directory

    - name: "Ensure Wildfly user {{ wildfly.user }} exists"
      user:
        name: "{{ wildfly.user }}"
        comment: "User to run Wildfly"

    - name: "Download and unzip Wildfly zipfile from {{ wfly_download_url }}"
      unarchive:
        src: "{{ wfly_download_url }}"
        dest: "{{ workdir }}"
        owner: "{{ wildfly.user }}"
        group: "{{ wildfly.user }}"
        remote_src: yes
        creates: "{{ wildfly.home }}"

    - name: "Ensure Wildfly Postgres module directory tree is present: {{ pgsql_module_dir }}"
      file:
        path: "{{ pgsql_module_dir }}"
        state: directory

    - name: "Ensures Wildfly Postgres Driver is present: "
      uri:
        url: "{{ jdbc_driver_url }}"
        dest: "{{ jdbc_driver_path }}"
        creates: "{{ jdbc_driver_path }}"

    - name: "Ensures Widlfy module for Postgres driver is present"
      template:
        src: templates/pgsql-module.xml.j2
        dest: "{{ pgsql_module_dir }}/module.xml"

    - name: "Ensures Wildfly's service script are properly deployed"
      copy:
        src: "{{ wildfly.home }}/docs/contrib/scripts/init.d/wildfly-init-redhat.sh"
        dest: /etc/init.d/wfly
        mode: 0755
        remote_src: yes
        owner: "{{ wildfly.user }}"
        group: "{{ wildfly.user }}"

    - name: "Ensures Wildfly service system configuration is properly deployed"
      template:
        src: templates/etc_jboss.conf.j2
        dest: /etc/default/wfly
        mode: 0644
        owner: "{{ wildfly.user }}"
        group: "{{ wildfly.user }}"

    - name: "Perform daemon-reload to ensure the changes are picked up"
      systemd:
        daemon_reload: yes

    - name: "Start Wildfly Server"
      service:
        name: wfly
        state: started
        enabled: yes
